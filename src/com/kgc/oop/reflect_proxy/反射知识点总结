什么是反射：JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；
           对于任意一个对象，都能够调用它的任意一个方法和属性；
           这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。

为什么反射是框架的灵魂：假设我们定义了很多类，有Animal、Person、Car… ，如果我想要一个Animal实例，
                      那我就new Animal（），如果另一个人想要一个Person实例，那么他需要new Person（），
                      当然，另一个说，我只要一个Car实例，于是它要new Car（）…这样一来就导致，每个用户
                      new的对象需求不相同，因此他们只能修改源代码，并重新编译才能生效。这种将new的对象
                      写死在代码里的方法非常不灵活，因此，为了避免这种情况的方法，Java提供了反射机制，

                      典型的应用：Spring框架容器创建对象的方式-->反射

Class类： Class对象是在加载类时由 Java 虚拟机以及通过调用类加载器中的defineClass()方法自动构造的。

          类从被加载到虚拟机内存中开始，到卸载出内存为止，它的整个生命周期包括：加载、连接、初始化、使用、卸载。
          而JVM在加载阶段要完成的3件事情中正好有Class对象的生成：
                1.通过一个类的全限定名来获取定义此类的二进制字节流。
                2.将这个字节流所代表的的静态存储结构转化为方法区的运行时数据结构。
                3.在内存中生成一个代表这个类的java.lang.Class对象，作为方法区这个类的各种数据的访问入口。

Class对象获取的三种方式：
    1.Class.forName()
    2.类名.class
    3.该类的对象.getClass()方法


通过Class对象创建类实例：
    Class<?> c = Class.forName("com.kgc.oop.reflect_proxy.reflect.Person");
    Person person = (Person) c.getConstructor().newInstance();

